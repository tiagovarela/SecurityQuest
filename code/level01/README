##############################################################################
Welcome to the first level of our educational CTF!

This level's theme is: Ciphering 1.0

During this level you'll learn the basics about traditional ciphering!
##############################################################################

So, ciphering is the art and science of secret writing! What does this mean?
It means that ciphering is used to diguise messages so that only certain
people can understand them.

This level will focus on the traditional use of ciphering: to conceal
information, by making it unintelligible, and when desired recover it
by reversing the method.

The ciphering method taught in this level will be a simple one:
 +-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+
 |t|h|e| |C|a|e|s|a|r| |C|i|p|h|e|r|
 +-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+
 
This method is named after, you guessed it, Julius Caesar who used it to
send ciphered military messages.
It's a substitution cipher in which each symbol of the message you want
to encipher is replaced by another symbol that is a fixed number of
positions along the desired alphabet.

A simple visualization of this is to line up your alphabet, decide the
number of positions to displace (e.g. say it's 2), and line up the
alphabet again but this time displaced:

    TRUE ALPHABET:     abcdefghijklmnopqrstuvwxyz
  CIPHER ALPHABET:   abcdefghijklmnopqrstuvwxyz

So if your message was "car" the ciphered message, using a shift of 2,
would be "ect"! You're getting this right?

But what happens when your message is "zoidberg"? The character "z" has
no match in the cipher below! Well it has because using this method the
ciphered alphabet wraps around. So in reality it stays:

    TRUE ALPHABET:     abcdefghijklmnopqrstuvwxyz
  CIPHER ALPHABET:     cdefghijklmnopqrstuvwxyzab

And "zoidberg" enciphered is: "bqkfdgti"!

By now you've noticed that there is no way to add a number or a symbol!
Yes that is true using this simple alphabet, but you can extend it adding
spaces, numbers or whatever symbol you want!

You can now test the ruby script we've provided!
Just run it using:

  ./caesar.rb

or

  ruby caesar.rb

to see it's usage and some examples of how to run it.

After trying it you're ready to decode the text on the file:
next_level_pass.txt

We'll give you a hint: the shift used to encipher it was between 5 and 10 ;)


See you on the next level!


